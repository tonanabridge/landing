{"version":3,"file":"static/js/855.50ad5c94.chunk.js","mappings":"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","sources":["components/Layout/Topbar.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router';\r\nimport { Container, Modal, ModalBody } from 'reactstrap';\r\n\r\n//Import images\r\nimport logodark from '../../assets/images/tonana.svg';\r\nimport logolight from '../../assets/images/tonana.svg';\r\n\r\nclass Topbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      dropdownOpenShop: false,\r\n      navLinks: [\r\n        //Note : each child and nested child must have unique id\r\n        { id: 1, title: 'Home', link: '/' },\r\n        {\r\n          id: 2,\r\n          title: 'About',\r\n          link: '/',\r\n          isOpenSubMenu: false,\r\n        },\r\n        {\r\n          id: 3,\r\n          title: 'Team',\r\n          link: '/',\r\n          isOpenSubMenu: false,\r\n          child: [\r\n            { title: 'Documentations', link: '/' },\r\n            { title: 'Changelog', link: '/' },\r\n            { title: 'Components', link: '/' },\r\n            { title: 'Widget', link: '/' },\r\n          ],\r\n        },\r\n      ],\r\n      wishlistModal: false,\r\n      dropdownIsOpen: false,\r\n    };\r\n    this.toggleLine = this.toggleLine.bind(this);\r\n    this.openBlock.bind(this);\r\n    this.openNestedBlock.bind(this);\r\n    this.toggleDropdownShop.bind(this);\r\n    this.toggleWishlistModal.bind(this);\r\n    this.toggleDropdownIsOpen.bind(this);\r\n  }\r\n\r\n  toggleWishlistModal = () => {\r\n    this.setState((prevState) => ({\r\n      wishlistModal: !prevState.wishlistModal,\r\n    }));\r\n  };\r\n\r\n  toggleDropdownShop = () => {\r\n    this.setState({\r\n      dropdownOpenShop: !this.state.dropdownOpenShop,\r\n    });\r\n  };\r\n  toggleDropdownIsOpen = () => {\r\n    this.setState({\r\n      dropdownIsOpen: !this.state.dropdownIsOpen,\r\n    });\r\n  };\r\n\r\n  toggleLine() {\r\n    this.setState((prevState) => ({ isOpen: !prevState.isOpen }));\r\n  }\r\n\r\n  componentDidMount() {\r\n    var matchingMenuItem = null;\r\n    var ul = document.getElementById('top-menu');\r\n    var items = ul.getElementsByTagName('a');\r\n    for (var i = 0; i < items.length; ++i) {\r\n      if (this.props.location.pathname === items[i].pathname) {\r\n        matchingMenuItem = items[i];\r\n        break;\r\n      }\r\n    }\r\n    if (matchingMenuItem) {\r\n      this.activateParentDropdown(matchingMenuItem);\r\n    }\r\n  }\r\n\r\n  activateParentDropdown = (item) => {\r\n    const parent = item.parentElement;\r\n    if (parent) {\r\n      parent.classList.add('active'); // li\r\n      const parent1 = parent.parentElement;\r\n      parent1.classList.add('active'); // li\r\n      if (parent1) {\r\n        const parent2 = parent1.parentElement;\r\n        parent2.classList.add('active'); // li\r\n        if (parent2) {\r\n          const parent3 = parent2.parentElement;\r\n          parent3.classList.add('active'); // li\r\n          if (parent3) {\r\n            const parent4 = parent3.parentElement;\r\n            parent4.classList.add('active'); // li\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  openBlock = (level2_id) => {\r\n    var tmpLinks = this.state.navLinks;\r\n    tmpLinks.map((tmpLink) =>\r\n      //Match level 2 id\r\n      tmpLink.id === level2_id\r\n        ? (tmpLink.isOpenSubMenu = !tmpLink.isOpenSubMenu)\r\n        : false,\r\n    );\r\n    this.setState({ navLinks: tmpLinks });\r\n  };\r\n\r\n  openNestedBlock = (level2_id, level3_id) => {\r\n    var tmpLinks = this.state.navLinks;\r\n    tmpLinks.map((tmpLink) =>\r\n      //Match level 2 id\r\n      tmpLink.id === level2_id\r\n        ? tmpLink.child.map((tmpchild) =>\r\n            //if level1 id is matched then match level 3 id\r\n            tmpchild.id === level3_id\r\n              ? //if id is matched then update status(level 3 sub menu will be open)\r\n                (tmpchild.isOpenNestedSubMenu = !tmpchild.isOpenNestedSubMenu)\r\n              : (tmpchild.isOpenNestedSubMenu = false),\r\n          )\r\n        : false,\r\n    );\r\n    this.setState({ navLinks: tmpLinks });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.tagline ? this.props.tagline : null}\r\n\r\n        <header id=\"topnav\" className=\"defaultscroll sticky\">\r\n          <Container>\r\n            <div>\r\n              {this.props.hasDarkTopBar ? (\r\n                <a className=\"logo\" href=\"index.html\">\r\n                  <img\r\n                    src={logodark}\r\n                    height=\"24\"\r\n                    className=\"logo-light-mode\"\r\n                    alt=\"\"\r\n                  />\r\n                  <img\r\n                    src={logolight}\r\n                    height=\"24\"\r\n                    className=\"logo-dark-mode\"\r\n                    alt=\"\"\r\n                  />\r\n                </a>\r\n              ) : (\r\n                <a className=\"logo\" href=\"index.html\">\r\n                  <span className=\"logo-light-mode\">\r\n                    <img src={logodark} className=\"l-dark\" height=\"24\" alt=\"\" />\r\n                    <img\r\n                      src={logolight}\r\n                      className=\"l-light\"\r\n                      height=\"24\"\r\n                      alt=\"\"\r\n                    />\r\n                  </span>\r\n                  <img\r\n                    src={logolight}\r\n                    height=\"24\"\r\n                    className=\"logo-dark-mode\"\r\n                    alt=\"\"\r\n                  />\r\n                </a>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"buy-button\">\r\n              <Link\r\n                to=\"https://app.tonana.org\"\r\n                target=\"_blank\"\r\n                id=\"buyButton\"\r\n                className=\"btn btn-warning btn-pills\"\r\n              >\r\n                Launch App\r\n              </Link>\r\n            </div>\r\n\r\n            <div className=\"menu-extras\">\r\n              <div className=\"menu-item\">\r\n                <Link\r\n                  to=\"#\"\r\n                  onClick={this.toggleLine}\r\n                  className={\r\n                    this.state.isOpen ? 'navbar-toggle open' : 'navbar-toggle'\r\n                  }\r\n                >\r\n                  <div className=\"lines\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              id=\"navigation\"\r\n              style={{ display: this.state.isOpen ? 'block' : 'none' }}\r\n            >\r\n              <ul className=\"navigation-menu\" id=\"top-menu\">\r\n                {this.state.navLinks.map((navLink, key) =>\r\n                  navLink.child ? (\r\n                    <li className=\"has-submenu\" key={key}>\r\n                      {/* child item(menu Item) - Level 1 */}\r\n                      <Link\r\n                        to={navLink.link}\r\n                        onClick={(event) => {\r\n                          event.preventDefault();\r\n                          this.openBlock(navLink.id);\r\n                        }}\r\n                      >\r\n                        {navLink.title}\r\n                      </Link>\r\n                      {/* <i className=\"mdi mdi-chevron-right me-1\"></i> */}\r\n                      <span className=\"menu-arrow\"></span>\r\n                      {navLink.isMegaMenu ? (\r\n                        // if menu is mega menu(2 columns grid)\r\n                        <ul\r\n                          className={\r\n                            navLink.isOpenSubMenu\r\n                              ? 'submenu megamenu open'\r\n                              : 'submenu megamenu'\r\n                          }\r\n                        >\r\n                          <li>\r\n                            <ul>\r\n                              {navLink.child.map((item, childKey) =>\r\n                                item.id < 12 ? (\r\n                                  <li key={childKey}>\r\n                                    <Link to={item.link}>{item.title}</Link>\r\n                                  </li>\r\n                                ) : null,\r\n                              )}\r\n                            </ul>\r\n                          </li>\r\n                          <li>\r\n                            <ul>\r\n                              {navLink.child.map((item, childKey) =>\r\n                                item.id < 23 && item.id > 11 ? (\r\n                                  <li key={childKey}>\r\n                                    <Link to={item.link}>\r\n                                      {item.title}\r\n                                      {item.isNew ? (\r\n                                        <span className=\"badge bg-danger rounded ms-2\">\r\n                                          new\r\n                                        </span>\r\n                                      ) : null}\r\n                                    </Link>\r\n                                  </li>\r\n                                ) : null,\r\n                              )}\r\n                            </ul>\r\n                          </li>\r\n                          <li>\r\n                            <ul>\r\n                              {navLink.child.map((item, childKey) =>\r\n                                item.id < 34 && item.id > 22 ? (\r\n                                  <li key={childKey}>\r\n                                    <Link to={item.link}>\r\n                                      {item.title}\r\n                                      {item.isNew ? (\r\n                                        <span className=\"badge bg-danger\">\r\n                                          new\r\n                                        </span>\r\n                                      ) : null}\r\n                                      {item.isOnePage ? (\r\n                                        <span className=\"badge bg-warning rounded ms-2\">\r\n                                          Onepage\r\n                                        </span>\r\n                                      ) : null}\r\n                                      {item.isupdatePage ? (\r\n                                        <span className=\"badge badge-pill bg-info\">\r\n                                          Updated\r\n                                        </span>\r\n                                      ) : null}\r\n                                    </Link>\r\n                                  </li>\r\n                                ) : null,\r\n                              )}\r\n                            </ul>\r\n                          </li>\r\n                          <li>\r\n                            <ul>\r\n                              {navLink.child.map((item, childKey) =>\r\n                                item.id < 45 && item.id > 33 ? (\r\n                                  <li key={childKey}>\r\n                                    <Link to={item.link}>\r\n                                      {item.title}\r\n\r\n                                      {item.isOnePage ? (\r\n                                        <span className=\"badge bg-warning rounded ms-2\">\r\n                                          Onepage\r\n                                        </span>\r\n                                      ) : null}\r\n                                      {item.isupdatePage ? (\r\n                                        <span className=\"badge badge-pill bg-info\">\r\n                                          Updated\r\n                                        </span>\r\n                                      ) : null}\r\n                                    </Link>\r\n                                  </li>\r\n                                ) : null,\r\n                              )}\r\n                            </ul>\r\n                          </li>\r\n                          <li>\r\n                            <ul>\r\n                              {navLink.child.map((item, childKey) =>\r\n                                item.id < 56 && item.id > 44 ? (\r\n                                  <li key={childKey}>\r\n                                    <Link to={item.link}>\r\n                                      {item.title}\r\n\r\n                                      {item.isOnePage ? (\r\n                                        <span className=\"badge bg-warning rounded ms-2\">\r\n                                          Onepage\r\n                                        </span>\r\n                                      ) : null}\r\n                                      {item.isupdatePage ? (\r\n                                        <span className=\"badge badge-pill bg-info\">\r\n                                          Updated\r\n                                        </span>\r\n                                      ) : null}\r\n                                    </Link>\r\n                                  </li>\r\n                                ) : null,\r\n                              )}\r\n                            </ul>\r\n                          </li>\r\n                        </ul>\r\n                      ) : (\r\n                        // if menu is not mega menu(1grid)\r\n                        <ul\r\n                          className={\r\n                            navLink.isOpenSubMenu ? 'submenu open' : 'submenu'\r\n                          }\r\n                        >\r\n                          {navLink.child.map((childArray, childKey) =>\r\n                            childArray.nestedChild ? (\r\n                              // sub menu item - Level 2\r\n                              <li className=\"has-submenu\" key={childKey}>\r\n                                <Link\r\n                                  to={childArray.link}\r\n                                  onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    this.openNestedBlock(\r\n                                      navLink.id,\r\n                                      childArray.id,\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  {childArray.title}{' '}\r\n                                  {childArray.isNew ? (\r\n                                    <span className=\"badge badge-pill badge-warning\">\r\n                                      Added\r\n                                    </span>\r\n                                  ) : null}\r\n                                </Link>\r\n                                <span className=\"submenu-arrow\"></span>\r\n                                <ul\r\n                                  className={\r\n                                    childArray.isOpenNestedSubMenu\r\n                                      ? 'submenu open'\r\n                                      : 'submenu'\r\n                                  }\r\n                                >\r\n                                  {childArray.nestedChild.map(\r\n                                    (nestedChildArray, nestedKey) => (\r\n                                      // nested sub menu item - Level 3\r\n                                      <li key={nestedKey}>\r\n                                        <Link to={nestedChildArray.link}>\r\n                                          {nestedChildArray.title}{' '}\r\n                                          {nestedChildArray.isNewPage ? (\r\n                                            <span className=\"badge badge-danger rounded\">\r\n                                              NEW\r\n                                            </span>\r\n                                          ) : null}\r\n                                          {nestedChildArray.isupdatePage ? (\r\n                                            <span className=\"badge badge-pill badge-info\">\r\n                                              Updated\r\n                                            </span>\r\n                                          ) : null}\r\n                                        </Link>\r\n                                      </li>\r\n                                    ),\r\n                                  )}\r\n                                </ul>\r\n                              </li>\r\n                            ) : (\r\n                              <li key={childKey}>\r\n                                <Link to={childArray.link}>\r\n                                  {childArray.title}\r\n                                </Link>\r\n                              </li>\r\n                            ),\r\n                          )}\r\n                        </ul>\r\n                      )}\r\n                    </li>\r\n                  ) : (\r\n                    <li key={key}>\r\n                      <Link to={navLink.link}>{navLink.title}</Link>\r\n                    </li>\r\n                  ),\r\n                )}\r\n              </ul>\r\n              <div className=\"buy-menu-btn d-none\">\r\n                <Link\r\n                  to=\"https://app.tonana.org\"\r\n                  target=\"_blank\"\r\n                  id=\"buyButton\"\r\n                  className=\"btn btn-warning pills\"\r\n                >\r\n                  Launch App\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </Container>\r\n        </header>\r\n\r\n        <Modal\r\n          isOpen={this.state.wishlistModal}\r\n          tabIndex=\"-1\"\r\n          centered\r\n          contentClassName=\"rounded shadow-lg border-0 overflow-hidden\"\r\n          toggle={this.toggleWishlistModal}\r\n        >\r\n          <ModalBody className=\"py-5\">\r\n            <div className=\"text-center\">\r\n              <div\r\n                className=\"icon d-flex align-items-center justify-content-center bg-soft-danger rounded-circle mx-auto\"\r\n                style={{ height: '95px', width: '95px' }}\r\n              >\r\n                <h1 className=\"mb-0\">\r\n                  <i className=\"uil uil-heart-break align-middle\"></i>\r\n                </h1>\r\n              </div>\r\n              <div className=\"mt-4\">\r\n                <h4>Your wishlist is empty.</h4>\r\n                <p className=\"text-muted\">\r\n                  Create your first wishlist request...\r\n                </p>\r\n                <div className=\"mt-4\">\r\n                  <Link to=\"#\" className=\"btn btn-outline-warning pills\">\r\n                    + Create new wishlist\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </ModalBody>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Topbar);\r\n"],"names":["Topbar","props","toggleWishlistModal","setState","prevState","wishlistModal","toggleDropdownShop","dropdownOpenShop","state","toggleDropdownIsOpen","dropdownIsOpen","activateParentDropdown","item","parent","parentElement","classList","add","parent1","parent2","parent3","openBlock","level2_id","tmpLinks","navLinks","map","tmpLink","id","isOpenSubMenu","openNestedBlock","level3_id","child","tmpchild","isOpenNestedSubMenu","isOpen","title","link","toggleLine","bind","this","matchingMenuItem","items","document","getElementById","getElementsByTagName","i","length","location","pathname","tagline","className","hasDarkTopBar","href","src","logodark","height","alt","logolight","to","target","onClick","style","display","navLink","key","event","preventDefault","isMegaMenu","childKey","isNew","isOnePage","isupdatePage","childArray","nestedChild","nestedChildArray","nestedKey","isNewPage","tabIndex","centered","contentClassName","toggle","width","Component","withRouter"],"sourceRoot":""}